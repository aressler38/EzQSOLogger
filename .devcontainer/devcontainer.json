// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.224.2/containers/debian
{
  "name": "EzQSOLoggerContainer",
  "build": {
    "dockerfile": "Dockerfile",
    "args": {}
  },
  // Set *default* container specific settings.json values on container create.
  "settings": {
    "omnisharp.useModernNet": true,
    "omnisharp.enableRoslynAnalyzers": true,
    "azureFunctions.pickProcessTimeout": 180,
    "azureFunctions.validateFuncCoreTools": true,
    "testExplorer.gutterDecoration": true,
    "testExplorer.codeLens": true,
    "testing.defaultGutterClickAction": "contextMenu",
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.defaultFormatter": "EditorConfig.EditorConfig",
    "[typescript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[vue]": {
      "editor.defaultFormatter": "Vue.volar"
    }
  },
  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "ms-azuretools.vscode-azurefunctions",
    "ms-dotnettools.csharp",
    "editorconfig.editorconfig",
    "vue.volar",
    "Vue.vscode-typescript-vue-plugin",
    "formulahendry.dotnet-test-explorer",
    "esbenp.prettier-vscode"
  ],
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],
  // Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
  // "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
  // Uncomment when using a ptrace-based debugger like C++, Go, and Rust
  // "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "root",
  "features": {},
  "onCreateCommand": "chmod +x ./scripts/on-create-command.sh && ./scripts/on-create-command.sh"
}